package model;
// Generated Dec 29, 2018 5:07:18 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NotificationUser generated by hbm2java
 */
@Entity
@Table(name = "notification_user")
public class NotificationUser implements java.io.Serializable {

	private NotificationUserId id;
	private Notification notification;
	private User user;
	private Boolean readNotification;
	private Date dateRead;

	public NotificationUser() {
	}

	public NotificationUser(NotificationUserId id, Notification notification, User user) {
		this.id = id;
		this.notification = notification;
		this.user = user;
	}

	public NotificationUser(NotificationUserId id, Notification notification, User user, Boolean readNotification,
			Date dateRead) {
		this.id = id;
		this.notification = notification;
		this.user = user;
		this.readNotification = readNotification;
		this.dateRead = dateRead;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idNotification", column = @Column(name = "id_Notification", nullable = false)),
			@AttributeOverride(name = "idUser", column = @Column(name = "id_User", nullable = false)) })
	public NotificationUserId getId() {
		return this.id;
	}

	public void setId(NotificationUserId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_Notification", nullable = false, insertable = false, updatable = false)
	public Notification getNotification() {
		return this.notification;
	}

	public void setNotification(Notification notification) {
		this.notification = notification;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_User", nullable = false, insertable = false, updatable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "read_Notification")
	public Boolean getReadNotification() {
		return this.readNotification;
	}

	public void setReadNotification(Boolean readNotification) {
		this.readNotification = readNotification;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateRead", length = 19)
	public Date getDateRead() {
		return this.dateRead;
	}

	public void setDateRead(Date dateRead) {
		this.dateRead = dateRead;
	}

}
