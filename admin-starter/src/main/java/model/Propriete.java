package model;
// Generated Dec 29, 2018 5:07:18 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Propriete generated by hbm2java
 */
@Entity
@Table(name = "propriete")
public class Propriete implements java.io.Serializable {

	private Integer idPropriete;
	private Ville ville;
	private String nomPropriete;
	private String adressePropriete;
	private Set<UserCoproprietaire> userCoproprietaires = new HashSet<UserCoproprietaire>(0);
	private Set<BienCommun> bienCommuns = new HashSet<BienCommun>(0);
	private Set<ProprieteFrs> proprieteFrses = new HashSet<ProprieteFrs>(0);
	private Set<Charges> chargeses = new HashSet<Charges>(0);
	private Set<Assemble> assembles = new HashSet<Assemble>(0);
	private Set<SyndicPropriete> syndicProprietes = new HashSet<SyndicPropriete>(0);

	public Propriete() {
	}

	public Propriete(Ville ville) {
		this.ville = ville;
	}

	public Propriete(Ville ville, String nomPropriete, String adressePropriete,
			Set<UserCoproprietaire> userCoproprietaires, Set<BienCommun> bienCommuns, Set<ProprieteFrs> proprieteFrses,
			Set<Charges> chargeses, Set<Assemble> assembles, Set<SyndicPropriete> syndicProprietes) {
		this.ville = ville;
		this.nomPropriete = nomPropriete;
		this.adressePropriete = adressePropriete;
		this.userCoproprietaires = userCoproprietaires;
		this.bienCommuns = bienCommuns;
		this.proprieteFrses = proprieteFrses;
		this.chargeses = chargeses;
		this.assembles = assembles;
		this.syndicProprietes = syndicProprietes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_Propriete", unique = true, nullable = false)
	public Integer getIdPropriete() {
		return this.idPropriete;
	}

	public void setIdPropriete(Integer idPropriete) {
		this.idPropriete = idPropriete;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_Ville", nullable = false)
	public Ville getVille() {
		return this.ville;
	}

	public void setVille(Ville ville) {
		this.ville = ville;
	}

	@Column(name = "nom_Propriete", length = 254)
	public String getNomPropriete() {
		return this.nomPropriete;
	}

	public void setNomPropriete(String nomPropriete) {
		this.nomPropriete = nomPropriete;
	}

	@Column(name = "adresse_Propriete", length = 254)
	public String getAdressePropriete() {
		return this.adressePropriete;
	}

	public void setAdressePropriete(String adressePropriete) {
		this.adressePropriete = adressePropriete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<UserCoproprietaire> getUserCoproprietaires() {
		return this.userCoproprietaires;
	}

	public void setUserCoproprietaires(Set<UserCoproprietaire> userCoproprietaires) {
		this.userCoproprietaires = userCoproprietaires;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<BienCommun> getBienCommuns() {
		return this.bienCommuns;
	}

	public void setBienCommuns(Set<BienCommun> bienCommuns) {
		this.bienCommuns = bienCommuns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<ProprieteFrs> getProprieteFrses() {
		return this.proprieteFrses;
	}

	public void setProprieteFrses(Set<ProprieteFrs> proprieteFrses) {
		this.proprieteFrses = proprieteFrses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<Charges> getChargeses() {
		return this.chargeses;
	}

	public void setChargeses(Set<Charges> chargeses) {
		this.chargeses = chargeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<Assemble> getAssembles() {
		return this.assembles;
	}

	public void setAssembles(Set<Assemble> assembles) {
		this.assembles = assembles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "propriete")
	public Set<SyndicPropriete> getSyndicProprietes() {
		return this.syndicProprietes;
	}

	public void setSyndicProprietes(Set<SyndicPropriete> syndicProprietes) {
		this.syndicProprietes = syndicProprietes;
	}
	public boolean hasNomPropriete() {
		return nomPropriete != null && !"".equals(nomPropriete.trim());
	}

	public boolean hasAdressePropriete() {
		return adressePropriete != null && !"".equals(adressePropriete.trim());
	}

	public boolean hasVillePropriete() {
		return ville != null;
	}

}
