package model;
// Generated Dec 29, 2018 5:07:18 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * UserCoproprietaire generated by hbm2java
 */
@Entity
@Table(name = "user_coproprietaire")
public class UserCoproprietaire implements java.io.Serializable {

	private int idUser;
	private Propriete propriete;
	private User user;
	private Set<VoteCopropProp> voteCopropProps = new HashSet<VoteCopropProp>(0);
	private Set<Cotisation> cotisations = new HashSet<Cotisation>(0);

	public UserCoproprietaire() {
	}

	public UserCoproprietaire(User user) {
		this.user = user;
	}

	public UserCoproprietaire(Propriete propriete, User user, Set<VoteCopropProp> voteCopropProps,
			Set<Cotisation> cotisations) {
		this.propriete = propriete;
		this.user = user;
		this.voteCopropProps = voteCopropProps;
		this.cotisations = cotisations;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id_User", unique = true, nullable = false)
	public int getIdUser() {
		return this.idUser;
	}

	public void setIdUser(int idUser) {
		this.idUser = idUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_Propriete")
	public Propriete getPropriete() {
		return this.propriete;
	}

	public void setPropriete(Propriete propriete) {
		this.propriete = propriete;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userCoproprietaire")
	public Set<VoteCopropProp> getVoteCopropProps() {
		return this.voteCopropProps;
	}

	public void setVoteCopropProps(Set<VoteCopropProp> voteCopropProps) {
		this.voteCopropProps = voteCopropProps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userCoproprietaire")
	public Set<Cotisation> getCotisations() {
		return this.cotisations;
	}

	public void setCotisations(Set<Cotisation> cotisations) {
		this.cotisations = cotisations;
	}

}
